# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=above-tick-12058-us1-kafka.upstash.io:9092
kafka.sasl.mechanism=SCRAM-SHA-256
kafka.security.protocol=SASL_SSL
kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
  username="YWJvdmUtdGljay0xMjA1OCRU2Hh7tAuNmCAXHQ1pGTgwrhxK4zieUYi8UY52S9M" \
  password="6634ab433a8543e7aa21ae08b923fbac";

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.movies.connector=smallrye-kafka
mp.messaging.outgoing.movies.topic=movies
mp.messaging.outgoing.movies.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.movies.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# configure your datasource
quarkus.datasource.db-kind = mysql
quarkus.datasource.username = 3k9niz5dnrhj967di653
quarkus.datasource.password = pscale_pw_OTg4MqtkD479vNsoGvjIW5E6zRYPQ3pnkUVBAGfk2Nu
quarkus.datasource.jdbc.url = jdbc:mysql://aws.connect.psdb.cloud/miami-assistence?sslMode=VERIFY_IDENTITY

# drop and create the database at startup (use `update` to only update the schema) (use `drop-and-create` to only drop and create the schema)
quarkus.hibernate-orm.database.generation = update